
a.out:     ファイル形式 mach-o-x86-64


セクション .text の逆アセンブル:

0000000100000ea0 <_printHack>:
   100000ea0:	55                   	push   rbp
   100000ea1:	48 89 e5             	mov    rbp,rsp
   100000ea4:	48 83 ec 10          	sub    rsp,0x10
   100000ea8:	48 8d 3d f1 00 00 00 	lea    rdi,[rip+0xf1]        # 100000fa0 <_main+0xe0>
   100000eaf:	b0 00                	mov    al,0x0
   100000eb1:	e8 a4 00 00 00       	call   100000f5a <_main+0x9a>
   100000eb6:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   100000eb9:	48 83 c4 10          	add    rsp,0x10
   100000ebd:	5d                   	pop    rbp
   100000ebe:	c3                   	ret    
   100000ebf:	90                   	nop

0000000100000ec0 <_main>:
   100000ec0:	55                   	push   rbp
   100000ec1:	48 89 e5             	mov    rbp,rsp
   100000ec4:	48 81 ec 30 01 00 00 	sub    rsp,0x130
   100000ecb:	be 00 01 00 00       	mov    esi,0x100
   100000ed0:	48 8b 05 31 01 00 00 	mov    rax,QWORD PTR [rip+0x131]        # 100001008 <_main+0x148>
   100000ed7:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
   100000ede:	48 8b 0d 1b 01 00 00 	mov    rcx,QWORD PTR [rip+0x11b]        # 100001000 <_main+0x140>
   100000ee5:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
   100000ee8:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
   100000eec:	c7 85 ec fe ff ff 00 	mov    DWORD PTR [rbp-0x114],0x0
   100000ef3:	00 00 00 
   100000ef6:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   100000ef9:	e8 56 00 00 00       	call   100000f54 <_main+0x94>
   100000efe:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
   100000f05:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
   100000f0c:	b0 00                	mov    al,0x0
   100000f0e:	e8 47 00 00 00       	call   100000f5a <_main+0x9a>
   100000f13:	bf 0a 00 00 00       	mov    edi,0xa
   100000f18:	89 85 dc fe ff ff    	mov    DWORD PTR [rbp-0x124],eax
   100000f1e:	e8 3d 00 00 00       	call   100000f60 <_main+0xa0>
   100000f23:	48 8b 0d d6 00 00 00 	mov    rcx,QWORD PTR [rip+0xd6]        # 100001000 <_main+0x140>
   100000f2a:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
   100000f2d:	48 3b 4d f8          	cmp    rcx,QWORD PTR [rbp-0x8]
   100000f31:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
   100000f37:	0f 85 0b 00 00 00    	jne    100000f48 <_main+0x88>
   100000f3d:	31 c0                	xor    eax,eax
   100000f3f:	48 81 c4 30 01 00 00 	add    rsp,0x130
   100000f46:	5d                   	pop    rbp
   100000f47:	c3                   	ret    
   100000f48:	e8 01 00 00 00       	call   100000f4e <_main+0x8e>

セクション __TEXT.__stubs の逆アセンブル:

0000000100000f4e <__TEXT.__stubs>:
   100000f4e:	ff 25 cc 00 00 00    	jmp    QWORD PTR [rip+0xcc]        # 100001020 <_main+0x160>
   100000f54:	ff 25 ce 00 00 00    	jmp    QWORD PTR [rip+0xce]        # 100001028 <_main+0x168>
   100000f5a:	ff 25 d0 00 00 00    	jmp    QWORD PTR [rip+0xd0]        # 100001030 <_main+0x170>
   100000f60:	ff 25 d2 00 00 00    	jmp    QWORD PTR [rip+0xd2]        # 100001038 <_main+0x178>

セクション __TEXT.__stub_helper の逆アセンブル:

0000000100000f68 <__TEXT.__stub_helper>:
   100000f68:	4c 8d 1d a9 00 00 00 	lea    r11,[rip+0xa9]        # 100001018 <_main+0x158>
   100000f6f:	41 53                	push   r11
   100000f71:	ff 25 99 00 00 00    	jmp    QWORD PTR [rip+0x99]        # 100001010 <_main+0x150>
   100000f77:	90                   	nop
   100000f78:	68 00 00 00 00       	push   0x0
   100000f7d:	e9 e6 ff ff ff       	jmp    100000f68 <_main+0xa8>
   100000f82:	68 18 00 00 00       	push   0x18
   100000f87:	e9 dc ff ff ff       	jmp    100000f68 <_main+0xa8>
   100000f8c:	68 25 00 00 00       	push   0x25
   100000f91:	e9 d2 ff ff ff       	jmp    100000f68 <_main+0xa8>
   100000f96:	68 33 00 00 00       	push   0x33
   100000f9b:	e9 c8 ff ff ff       	jmp    100000f68 <_main+0xa8>

セクション __TEXT.__unwind_info の逆アセンブル:

0000000100000fb0 <__TEXT.__unwind_info>:
   100000fb0:	01 00                	add    DWORD PTR [rax],eax
   100000fb2:	00 00                	add    BYTE PTR [rax],al
   100000fb4:	1c 00                	sbb    al,0x0
   100000fb6:	00 00                	add    BYTE PTR [rax],al
   100000fb8:	00 00                	add    BYTE PTR [rax],al
   100000fba:	00 00                	add    BYTE PTR [rax],al
   100000fbc:	1c 00                	sbb    al,0x0
   100000fbe:	00 00                	add    BYTE PTR [rax],al
   100000fc0:	00 00                	add    BYTE PTR [rax],al
   100000fc2:	00 00                	add    BYTE PTR [rax],al
   100000fc4:	1c 00                	sbb    al,0x0
   100000fc6:	00 00                	add    BYTE PTR [rax],al
   100000fc8:	02 00                	add    al,BYTE PTR [rax]
   100000fca:	00 00                	add    BYTE PTR [rax],al
   100000fcc:	a0 0e 00 00 34 00 00 	movabs al,ds:0x340000003400000e
   100000fd3:	00 34 
   100000fd5:	00 00                	add    BYTE PTR [rax],al
   100000fd7:	00 4e 0f             	add    BYTE PTR [rsi+0xf],cl
   100000fda:	00 00                	add    BYTE PTR [rax],al
   100000fdc:	00 00                	add    BYTE PTR [rax],al
   100000fde:	00 00                	add    BYTE PTR [rax],al
   100000fe0:	34 00                	xor    al,0x0
   100000fe2:	00 00                	add    BYTE PTR [rax],al
   100000fe4:	03 00                	add    eax,DWORD PTR [rax]
   100000fe6:	00 00                	add    BYTE PTR [rax],al
   100000fe8:	0c 00                	or     al,0x0
   100000fea:	01 00                	add    DWORD PTR [rax],eax
   100000fec:	10 00                	adc    BYTE PTR [rax],al
   100000fee:	01 00                	add    DWORD PTR [rax],eax
   100000ff0:	00 00                	add    BYTE PTR [rax],al
   100000ff2:	00 00                	add    BYTE PTR [rax],al
   100000ff4:	00 00                	add    BYTE PTR [rax],al
   100000ff6:	00 01                	add    BYTE PTR [rcx],al
